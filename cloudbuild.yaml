steps:
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/client", "./frontend"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/server", "./backend"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/nginx", "--build-arg", "nginx_proxy_conf=./nginx.conf", "."]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/client"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/server"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/nginx"]

  - name: "gcr.io/cloud-builders/gcloud"
    args: ["run", "deploy", "youtubed", "--image", "gcr.io/$PROJECT_ID/nginx", "--region", "us-central1", "--platform", "managed", "--allow-unauthenticated"]
options:
  logging: CLOUD_LOGGING_ONLY
























# steps:
# - name: 'gcr.io/cloud-builders/docker'
#   args: [ 'build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA', '.' ]
# - name: 'gcr.io/cloud-builders/docker'
#   args: [ 'push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA']
# - name: 'gcr.io/cloud-builders/gcloud'
#   args:
#     - 'run'
#     - 'deploy'
#     - '${_SERVICE_NAME}'
#     - '--region=${_REGION}'
#     - '--platform=managed'
#     - '--allow-unauthenticated'
#     - '--service-account=${_SERVICE_ACCOUNT_EMAIL}'
#     - '--image=gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:$SHORT_SHA'
# options:
#   logging: CLOUD_LOGGING_ONLY
